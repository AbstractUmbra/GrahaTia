[tool.poetry]
name = "Graha Tia"
version = "0.0.1"
description = "A helper bot for organizing your FFXIV needs."
authors = ["Alex NÃ¸rgaard <umbra@abstractumbra.dev>"]

[tool.poetry.dependencies]
python = "^3.12"
"discord.py" = { git = "https://github.com/Rapptz/discord.py.git", extras = [
    "speed",
], rev = "master" }
discord-ext-menus = { git = "https://github.com/Rapptz/discord-ext-menus", rev = "master" }
jishaku = "*"
"mystbin.py" = "*"
asyncpg = "*"
sentry-sdk = "*"
lru-dict = "*"
parsedatetime = "*"
python-dateutil = "*"
psutil = "*"
pygit2 = "*"
beautifulsoup4 = "*"
lxml = "*"

[tool.poetry.group.dev.dependencies]
ruff = "*"
typing-extensions = "*"
asyncpg-stubs = "*"
"pre-commit" = "*"

[tool.poetry.group.speed.dependencies]
orjson = "*"
uvloop = "*"

[tool.ruff]
line-length = 125
target-version = "py312"

[tool.ruff.lint]
select = [
    "C4",
    "F",
    "G",
    "I",
    "PTH",
    "RUF",
    "SIM",
    "TCH",
    "UP",
    "W",
    "PERF",
    "ANN",
]
ignore = [
    "F401",
    "F402",
    "F403",
    "F405",
    "PERF203",
    "RUF001",
    "RUF009",
    "SIM105",
    "UP034",
    "UP038",
    "ANN101",
    "ANN102",
    "ANN401",
]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
split-on-trailing-comma = true
combine-as-imports = true

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false
parametrize-names-type = "csv"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.pyright]
include = ["bot.py", "utilities/**/*.py", "extensions/**/*.py"]
venv = ".venv"
venvPath = "."
useLibraryCodeForTypes = true
typeCheckingMode = "basic"
pythonVersion = "3.12"
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
strictParameterNoneValue = true
reportMissingImports = "error"
reportUnusedImport = "error"
reportUnusedClass = "error"
reportUnusedFunction = "error"
reportUnusedVariable = "error"
reportGeneralTypeIssues = "error"
reportDuplicateImport = "error"
reportUntypedFunctionDecorator = "error"
reportUnnecessaryTypeIgnoreComment = "warning"

[build-system]
requires = ["poetry-core>=1.0.2b2"]
build-backend = "poetry.core.masonry.api"
